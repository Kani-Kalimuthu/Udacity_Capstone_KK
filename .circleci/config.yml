version: 2.1

orbs:
  aws-eks: circleci/aws-eks@1.1.0
  kubernetes: circleci/kubernetes@0.12.0
  
jobs:
  test-cluster:
    docker:
      - image: cimg/python:3.10
    parameters:
      cluster-name:
        description: |
          Name of the EKS cluster
        type: string
    steps:
      - kubernetes/install:
          kubectl-version: v1.22.0
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: << parameters.cluster-name >>
      - run:
          command: |
            kubectl get services
          name: Test cluster
  lint:
    docker:
      - image: python:3.7.3-stretch
    steps:
      - checkout
      - run:
          name: Back-end lint
          command: |
            make all
                           
  build-docker-image:
    docker:
      - image: circleci/buildpack-deps:stretch
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: build-image
          command: |
            sudo chmod +x run_docker.sh
            ./run_docker.sh
      - run:
          name: upload-image
          command: |
            sudo chmod +x upload_docker.sh
            ./upload_docker.sh

  Deploy:
      executor: aws-eks/python3
      steps:
        - checkout
        - kubernetes/install
        - run:
            name: Install the awscli tool the eksctl tool
            command: |
              pip install -U awscli
              if which eksctl > /dev/null; then
                echo "eksctl is already installed"
                exit 0
              fi
              mkdir -p eksctl_download
              curl --silent --location --retry 5 "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" \
                | tar xz -C eksctl_download
              chmod +x eksctl_download/eksctl
              SUDO=""
              if [ $(id -u) -ne 0 ] && which sudo > /dev/null ; then
                SUDO="sudo"
              fi
              $SUDO mv eksctl_download/eksctl /usr/local/bin/
              rmdir eksctl_download
        - aws-eks/create-cluster:
            cluster-name: capstone-kk
            aws-region: us-east-1
        - aws-eks/update-kubeconfig-with-authenticator:
            cluster-name: capstone-kk
            aws-region: us-east-1
        - kubernetes/create-or-update-resource:
            resource-file-path: deployment.yml
            resource-name: deployment/capstone-sample-app
        - kubernetes/create-or-update-resource:
            resource-file-path: service.yml
            resource-name: service/capstone-sample-app


  create-cluster:
      docker:
        - image: python:3.7-alpine3.11
      steps:
        - checkout
        - run:
            name: Install tar and gzip
            command: |
              apk add --update tar gzip nodejs npm curl  
        - run:
            name: install_awscli
            command: |
              curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
              unzip awscliv2.zip
              ./aws/install 
        - run:
            name: install_aws_eks
            command: |
              mkdir -p src
              curl --silent --location --retry 5 "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C src
              chmod +x src/eksctl
              SUDO=""
              if [ $(id -u) -ne 0 ] && which sudo > /dev/null ; then
                  SUDO="sudo"
              fi
                  $SUDO mv src/eksctl /usr/local/bin/
                  rmdir src
        - run:
            name: install_kubectl
            command: |
              curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
              install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
              kubectl version --client
        - run:
            name: AWS EKS cluster creation
            command: |
             #eksctl create cluster -f cluster.yml
             eksctl create cluster --name capstone-kk --region us-east-1 --zones us-east-1a,us-east-1b,us-east-1c,us-east-1d 
              
        - run:
            name: AWS EKS get cluster creation
            command: |
              #eksctl utils describe-stacks --region us-east-1 --cluster=kani-capstone
              #eksctl get cluster --name=kani-capstone --region=us-east-1

  deploy-cluster:
      executor: aws-eks/python3
      parameters:
        cluster-name:
          description: |
            capstone
          type: string
      steps:
        - checkout
        - kubernetes/install
        - aws-eks/update-kubeconfig-with-authenticator:
            cluster-name: << parameters.cluster-name >>
            install-kubectl: true
        - kubernetes/create-or-update-resource:
            get-rollout-status: true
            resource-file-path: deployment.yml
            resource-name: deployment/capstone

  check-cluster:
    executor: aws-eks/python3
    parameters: 
      cluster-name:
        description: |
          capstone
        type: string
    steps:
      - kubernetes/install
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: << parameters.cluster-name >>
      - run:
          name: Check Cluster status
          command: |
            kubectl get nodes
            kubectl get all
              
workflows:
  default:
    jobs:
      #- lint
      #- build-docker-image
         # requires: [lint]
      #- upload-docker-image:
          #requires: [build-docker-image]
      #- Deploy
      #- aws-eks/create-cluster:
          #cluster-name: capstone-kk
      #- test-cluster:
          #cluster-name: capstone-kk
          #requires:
            #- aws-eks/create-cluster
      - create-cluster
      #- deploy-cluster: 
          #requires: [create-cluster]
      #- check-cluster:
         # requires: [deploy-cluster]